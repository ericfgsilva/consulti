window.ParsleyExtend=window.ParsleyExtend||{},window.ParsleyExtend=$.extend(window.ParsleyExtend,{asyncSupport:!0,asyncValidators:$.extend({"default":{fn:function(xhr){return"resolved"===xhr.state()},url:!1},reverse:{fn:function(xhr){return"rejected"===xhr.state()},url:!1}},window.ParsleyExtend.asyncValidators),addAsyncValidator:function(name,fn,url){return this.asyncValidators[name.toLowerCase()]={fn:fn,url:url||!1},this},asyncValidate:function(){return"ParsleyForm"===this.__class__?this._asyncValidateForm.apply(this,arguments):this._asyncValidateField.apply(this,arguments)},asyncIsValid:function(){return"ParsleyField"===this.__class__?this._asyncIsValidField.apply(this,arguments):this._asyncIsValidForm.apply(this,arguments)},onSubmitValidate:function(event){var that=this;if(!0!==event.parsley)return this.submitEvent=$.extend(!0,{},event),event instanceof $.Event&&(event.stopImmediatePropagation(),event.preventDefault()),this._asyncValidateForm(void 0,event).done(function(){that.submitEvent.isDefaultPrevented()||that.$element.trigger($.extend($.Event("submit"),{parsley:!0}))})},eventValidate:function(event){new RegExp("key").test(event.type)&&!this._ui.validationInformationVisible&&this.getValue().length<=this.options.validationThreshold||(this._ui.validatedOnce=!0,this.asyncValidate())},_asyncValidateForm:function(group){var that=this,promises=[];this._refreshFields(),$.emit("parsley:form:validate",this);for(var i=0;i<this.fields.length;i++)group&&group!==this.fields[i].options.group||promises.push(this.fields[i]._asyncValidateField());return $.when.apply($,promises).always(function(){$.emit("parsley:form:validated",that)})},_asyncIsValidForm:function(group,force){var promises=[];this._refreshFields();for(var i=0;i<this.fields.length;i++)group&&group!==this.fields[i].options.group||promises.push(this.fields[i]._asyncIsValidField(force));return $.when.apply($,promises)},_asyncValidateField:function(force){var that=this;return $.emit("parsley:field:validate",this),this._asyncIsValidField(force).done(function(){$.emit("parsley:field:success",that)}).fail(function(){$.emit("parsley:field:error",that)}).always(function(){$.emit("parsley:field:validated",that)})},_asyncIsValidField:function(force,value){var deferred=$.Deferred();return!1===this.isValid(force,value)?deferred.rejectWith(this):"undefined"!=typeof this.constraintsByName.remote?this._remote(deferred):deferred.resolveWith(this),deferred.promise()},_remote:function(deferred){var ajaxOptions,csr,that=this,data={},validator=this.options.remoteValidator||(!0===this.options.remoteReverse?"reverse":"default");if(validator=validator.toLowerCase(),"undefined"==typeof this.asyncValidators[validator])throw new Error("Calling an undefined async validator: `"+validator+"`");data[this.$element.attr("name")||this.$element.attr("id")]=this.getValue(),ajaxOptions=$.extend(!0,{},{url:this.asyncValidators[validator].url||this.options.remote,data:data,type:"GET"},this.options.remoteOptions||{}),csr=$.param(ajaxOptions),"undefined"==typeof this._remoteCache&&(this._remoteCache={}),this._remoteCache[csr]||(this._xhr&&"pending"===this._xhr.state()&&this._xhr.abort(),this._xhr=$.ajax(ajaxOptions),this._remoteCache[csr]=this._xhr),this._remoteCache[csr].done(function(data,textStatus,xhr){that._handleRemoteResult(validator,xhr,deferred)}).fail(function(xhr,status){"abort"!==status&&that._handleRemoteResult(validator,xhr,deferred)})},_handleRemoteResult:function(validator,xhr,deferred){return"function"==typeof this.asyncValidators[validator].fn&&this.asyncValidators[validator].fn(xhr)?void deferred.resolveWith(this):(this.validationResult=[new window.ParsleyValidator.Validator.Violation(this.constraintsByName.remote,this.getValue(),null)],void deferred.rejectWith(this))}}),window.ParsleyConfig=window.ParsleyConfig||{},window.ParsleyConfig.validators=window.ParsleyConfig.validators||{},window.ParsleyConfig.validators.remote={fn:function(){return!0},priority:-1};